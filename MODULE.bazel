"""Bazel File Operations Component

Universal file operations for Bazel build systems via WebAssembly components.

This module provides both TinyGo and Rust implementations of file operations
that can be used across different Bazel rule sets with enhanced security
through WebAssembly sandboxing.
"""

module(
    name = "bazel-file-ops-component",
    version = "0.1.0",
    compatibility_level = 1,
)

# Core Bazel dependencies
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_cc", version = "0.0.13")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

# WebAssembly and component support
bazel_dep(name = "rules_rust", version = "0.53.0")
bazel_dep(name = "rules_go", version = "0.50.1")

# Documentation site dependencies  
bazel_dep(name = "aspect_rules_js", version = "2.1.0")
bazel_dep(name = "aspect_rules_ts", version = "3.2.1")

# TinyGo toolchain for WebAssembly components  
bazel_dep(name = "rules_wasm_component", version = "0.1.0")

# Local development override - use local rules_wasm_component
local_path_override(
    module_name = "rules_wasm_component",
    path = "/Users/r/git/rules_wasm_component",
)

# Rust toolchain setup
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(edition = "2021")
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

# Rust dependencies
crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")

crate.spec(
    package = "anyhow",
    version = "1.0",
)

crate.spec(
    package = "serde",
    version = "1.0",
    features = ["derive"],
)

crate.spec(
    package = "serde_json",
    version = "1.0",
)

crate.spec(
    package = "wasmtime",
    version = "25.0",
    features = ["component-model"],
)

crate.spec(
    package = "wit-bindgen",
    version = "0.30",
)

crate.from_specs()
use_repo(crate, "crates")

# Go toolchain setup
go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.23.0")

# TinyGo toolchain setup
tinygo = use_extension("@rules_wasm_component//toolchains:tinygo.bzl", "tinygo_toolchain")
tinygo.toolchain(
    name = "tinygo",
    version = "0.38.0",
)
use_repo(tinygo, "tinygo_toolchain")

register_toolchains("@tinygo_toolchain//:all")

# Node.js setup for documentation
node = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
node.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(node, "npm")