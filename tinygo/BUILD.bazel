"""TinyGo WebAssembly File Operations Component

This package provides the TinyGo implementation of the file operations component
with WIT interface bindings for secure, sandboxed file operations.
"""

load("@rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@rules_wasm_component//go:defs.bzl", "go_wasm_component")
load("@rules_wasm_component//wasm:defs.bzl", "wasm_keygen", "wasm_sign", "wasm_verify")
load("@rules_wasm_component//wkg:oci_signing.bzl", "wasm_component_signed_oci_image")
load("@rules_wasm_component//wkg:defs.bzl", "wkg_publish")

package(default_visibility = ["//visibility:public"])

# TinyGo library with core file operations
go_library(
    name = "file_ops_lib",
    srcs = [
        "json_bridge.go",
        "main.go",
        "operations.go",
        "security.go",
        "workspace.go",
    ],
    importpath = "github.com/pulseengine/bazel-file-ops-component/tinygo",
    deps = [
        # Standard library dependencies only for TinyGo compatibility
    ],
)

# CLI binary for testing and development
go_binary(
    name = "file_ops_cli",
    srcs = ["main.go"],
    goarch = "amd64",
    # Build for host platform for testing
    goos = "linux",
    deps = [":file_ops_lib"],
)

# TinyGo WebAssembly Component
go_wasm_component(
    name = "file_ops_component",
    srcs = [
        "json_bridge.go",
        "main.go",
        "operations.go",
        "security.go",
        "wit_bindings.go",
        "workspace.go",
    ],
    adapter = "@rules_wasm_component//wasm/adapters:wasi_snapshot_preview1",
    go_mod = "go.mod",
    go_sum = "go.sum",
    optimization = "release",
    tags = ["manual"],  # Build explicitly for WASM
    world = "wasi:cli/command",
)

# Test suite
go_test(
    name = "file_ops_test",
    srcs = [
        "json_bridge_test.go",
        "operations_test.go",
    ],
    data = [
        "//testdata:test_configs",
        "//testdata:test_files",
    ],
    deps = [
        ":file_ops_lib",
        "@org_golang_x_testing//fstest",
    ],
)

# Integration tests with WASM component
# Note: sh_test is deprecated, replaced with Go-based integration tests in //testdata:integration_tests

# Performance benchmarks (disabled - benchmark_test.go not yet implemented)
# go_test(
#     name = "benchmark_test",
#     srcs = ["benchmark_test.go"],
#     args = ["-bench=."],
#     tags = ["benchmark"],
#     deps = [":file_ops_lib"],
# )

# Generate signing keys for component security
wasm_keygen(
    name = "component_signing_keys",
    openssh_format = True,  # Compatible with GitHub SSH keys
    tags = ["manual"],  # Generated on demand
)

# Sign the WebAssembly component
wasm_sign(
    name = "file_ops_component_signed",
    component = ":file_ops_component",
    detached = False,  # Embed signature in component
    keys = ":component_signing_keys",
    tags = ["manual"],
)

# Verify component signature
wasm_verify(
    name = "verify_file_ops_signature",
    keys = ":component_signing_keys",
    signed_component = ":file_ops_component_signed",
    tags = ["manual"],
)

# Create signed OCI image for registry publishing
wasm_component_signed_oci_image(
    name = "file_ops_oci_signed",
    package_name = "bazel-file-ops-component-tinygo",
    component = ":file_ops_component",
    component_signing_keys = ":component_signing_keys",
    namespace = "pulseengine",
    registry = "ghcr.io",
    sign_component = True,
    tags = ["manual"],
)

# Legacy aliases for backward compatibility
alias(
    name = "file_ops",
    actual = ":file_ops_component",
    visibility = ["//visibility:public"],
)

alias(
    name = "file_ops_tinygo",
    actual = ":file_ops_component",
    visibility = ["//visibility:public"],
)

alias(
    name = "file_ops_component_wasm",
    actual = ":file_ops_component",
    visibility = ["//visibility:public"],
)

# Signed component aliases
alias(
    name = "file_ops_signed",
    actual = ":file_ops_component_signed",
    visibility = ["//visibility:public"],
)

# Publish to wkg registry
wkg_publish(
    name = "publish_file_ops",
    component = ":file_ops_component",
    package_name = "pulseengine:file-ops",
    version = "0.1.0",
    description = "File operations WebAssembly component built with TinyGo",
    authors = ["Pulse Engine"],
    license = "Apache-2.0",
)
