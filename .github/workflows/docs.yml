name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs-site/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs-site/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: docs-site/package-lock.json

      - name: Install dependencies
        run: |
          cd docs-site
          npm ci

      - name: Build documentation
        run: |
          cd docs-site
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs-site/dist

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Also deploy to custom domain if configured
  deploy-custom:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: docs-site/package-lock.json

      - name: Install dependencies
        run: |
          cd docs-site
          npm ci

      - name: Build for custom domain
        run: |
          cd docs-site
          npm run build

      - name: Deploy to custom domain (if configured)
        # This step would deploy to your custom domain
        # Configure with your deployment method (Netlify, Vercel, etc.)
        run: |
          echo "Custom domain deployment would happen here"
          echo "Site built for: https://bazel-file-ops.pulseengine.eu"
          # Example for different deployment methods:
          #
          # For Netlify:
          # npm install -g netlify-cli
          # netlify deploy --prod --dir=dist --site=${{ secrets.NETLIFY_SITE_ID }} --auth=${{ secrets.NETLIFY_AUTH_TOKEN }}
          #
          # For Vercel:
          # npm install -g vercel
          # vercel --prod --confirm --token=${{ secrets.VERCEL_TOKEN }}
          #
          # For custom server:
          # rsync -avz --delete dist/ user@server:/path/to/site/
